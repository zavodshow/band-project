version: "3.8"

services:
  mysql:
    image: mysql:8.0
    container_name: mysql_db
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: rootpassword
      MYSQL_DATABASE: laravel
      MYSQL_USER: laraveluser
      MYSQL_PASSWORD: laravelpassword
    volumes:
      - mysql_data:/var/lib/mysql
    networks:
      - app_network
    command: --default-authentication-plugin=mysql_native_password

  laravel:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: laravel_app
    restart: unless-stopped
    volumes:
      - ./backend:/var/www
      - laravel_storage:/var/www/storage/app/public
    environment:
      DB_CONNECTION: mysql
      DB_HOST: mysql
      DB_PORT: 3306
      DB_DATABASE: laravel
      DB_USERNAME: laraveluser
      DB_PASSWORD: laravelpassword
    networks:
      - app_network
    command: >
      sh -c "
      mkdir -p bootstrap/cache storage/framework/{cache,sessions,views} &&
      chmod -R 775 bootstrap/cache storage &&
      php artisan config:cache &&
      php artisan route:cache &&
      php artisan view:cache &&
      php artisan storage:link &&
      php-fpm
      "

  next:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: next_app
    restart: unless-stopped
    environment:
      - NODE_ENV=development
      - NEXT_PUBLIC_API_URL=http://109.196.100.122
    networks:
      - app_network

  nginx:
    image: nginx:alpine
    container_name: nginx_server
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/app.conf:/etc/nginx/conf.d/default.conf
      - laravel_storage:/var/www/storage/app/public
    networks:
      - app_network
    depends_on:
      - laravel
      - next

networks:
  app_network:
    driver: bridge

volumes:
  mysql_data:
  laravel_storage:
